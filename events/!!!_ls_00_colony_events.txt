##########################################################################
# Limitless Stellaris - Events
##########################################################################

namespace = colony

##################################################
## Colony Events
##################################################

## Colony 50 - Seismic Disturbances Event
# Merge between Rapid Evolution, Even More Origins, Ariphaos, Scripted Trigger Undercoat
# Planet classes are merged and conditions are improved.
planet_event = {
	id = colony.50
	title = "colony.50.name"
	desc = {
		trigger = {
			NOT = {
				owner = { is_subterranean_empire = yes } # STU
			}
		}
		text = "colony.50.desc"
	}
	desc = {
		trigger = {
			owner = { is_subterranean_empire = yes } # STU
		}
		text = "colony.50.desc.subterranean"
	}

	picture = GFX_evt_in_the_dark
	show_sound = event_air_raid_siren
	location = ROOT
	trackable = yes

	pre_triggers = {
		is_ai = no
		has_owner = yes
		is_homeworld = no
		original_owner = yes
		has_ground_combat = no
		is_capital = no
		is_occupied_flag = no
	}

	trigger = {
		#owner = { is_gestalt = no } # STU
		num_pops > 0
		NOR = {
			has_global_flag = seismic_disturbance_global
			has_planet_flag = colony_event
			is_nuked_world = yes # STU
			is_artificial = yes # STU
			is_city_world = yes # STU
			is_relic_world = yes # STU
		}
	}

	is_triggered_only = yes

	immediate = {
		owner = { save_event_target_as = subterranean_planet_owner }
		set_global_flag = seismic_disturbance_global
		set_planet_flag = seismic_disturbance
		set_planet_flag = colony_event
		add_deposit = d_underground_farm_blocked
		add_deposit = d_underground_mine_blocked
		add_deposit = d_underground_generator_blocked
		create_subterranean_nation = { FLAG = subterranean_nation }
	}

	option = {
		name = colony.50.a
		begin_event_chain = {
			event_chain = "subterranean_civilization_chain"
			target = ROOT
		}
		enable_special_project = {
			name = "SEISMIC_DISTURBANCE_1_PROJECT" #Establish Communications
			location = this
			owner = root
		}
		enable_special_project = {
			name = "SEISMIC_DISTURBANCE_2_PROJECT" #Preemptive Strike
			location = this
			owner = root
		}

	}
	option = {
		name = distar.216.a.exter
		exclusive_trigger = { # Even More Origins
			OR = {
				# Neither of these knows what to do with Trade Value
				owner = {
					is_homicidal = yes
				}
				owner = {
					has_ethic = ethic_gestalt_consciousness
				}
			}
		}
		begin_event_chain = {
			event_chain = "subterranean_civilization_chain"
			target = ROOT
		}
		enable_special_project = {
			name = "SEISMIC_DISTURBANCE_2_PROJECT" #Preemptive Strike
			location = this
			owner = root
		}

	}
}

## Colony 180 - Asteroid Sighted Starting Event
# Merge between Rapid Evolution, Ariphaos, Scripted Trigger Undercoat
# Intentionally left all pre-triggers since this event was interfering with AI heavily, since they do not send fleets at the asteroid.
planet_event = {
	id = colony.180
	title = "colony.180.name"
	desc = "colony.180.desc"
	picture = GFX_evt_asteroid_approaching_planet
	show_sound = event_air_raid_siren
	location = ROOT

	pre_triggers = {
		has_owner = yes
		is_homeworld = no
		original_owner = yes
		is_ai = no
		has_ground_combat = no
		is_capital = no
		is_occupied_flag = no
	}

	trigger = {
		always = no
		# LS - Disabling this event entirely since it causes lagg, is very buggy, and generally not very exciting.
		#num_pops > 0
		#years_passed < 50
		#NOR = {
		#	is_artificial = yes # STU
		#	has_planet_flag = asteroid_sighted
		#	has_planet_flag = asteroid_collision
		#	has_global_flag = asteroid_sighted_global
		#	owner = { has_country_flag = asteroid_sighted_country }
		#}
		#OR = { # Rapid Evolution
		#	has_planet_flag = re_trigger_asteroid_events
		#	NOR = {
		#		is_homeworld = yes
		#		original_owner = no
		#		owner = { is_ai = yes }
		#		is_capital = yes
		#		has_planet_flag = asteroid_collision
		#		has_global_flag = asteroid_sighted_global
		#	}
		#}
	}

	is_triggered_only = yes

	immediate = {
		owner = {
			set_country_flag = asteroid_sighted_country
		}
		set_global_flag = asteroid_sighted_global
		set_planet_flag = asteroid_sighted
		create_country = {
			name = "NAME_Incoming_Asteroid"
			type = faction
			auto_delete = no
			flag = {
				icon = {
					category = "zoological"
					file = "flag_zoological_1.dds"
				}
				background= {
					category = "backgrounds"
					file = "new_dawn.dds"
				}
				colors={
					"black"
					"black"
					"null"
					"null"
				}
			}
			effect = {
				establish_communications_no_message = root.owner
			}
		}
		last_created_country = {
			set_country_flag = incoming_asteroid
			create_fleet = {
				name = "NAME_Asteroid"
				effect = {
					set_aggro_range = 0
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = self
					set_owner = PREV
					set_fleet_flag = asteroid_fleet
					save_event_target_as = asteroid_fleet_target
					create_ship = {
						name = "NAME_Asteroid"
						design = "NAME_Asteroid"
					}
					set_location = {
						target = ROOT
						distance = 75
						angle = random
					}
					queue_actions = {
						move_to = ROOT
						effect = {
							id = "colony.180.effect.1.re" # Rapid Evolution
							ROOT = {
								planet_event = { id = colony.183 }
							}
						}
					}
				}
			}
			set_relation_flag = {
				who = root.owner
				flag = asteroid_enemy
			}
		}
	}

	option = {
		trigger = {
			owner = { is_machine_empire = no }
		}
		name = colony.180.a
		begin_event_chain = {
			event_chain = "asteroid_sighted_chain"
			target = root.owner
		}
	}

	option = {
		trigger = { owner = { is_machine_empire = yes } }
		name = colony.180.b
		begin_event_chain = {
			event_chain = "asteroid_sighted_chain"
			target = root.owner
		}
	}
}

## Colony 3000 - Dimensional Portal Event
# Merge between Planetary Diversity, Daemonic Incursion, Ariphaos, Scripted Trigger Undercoat
# Prioritize the Daemonic Incursion version, ensure not AI in pre-trigger from Ariphaos, and add origin blockers from Planetary Diversity.
planet_event = {
	id = colony.3005
	title = "colony.3005.name"
	desc = "colony.3005.desc"
	picture = GFX_evt_wormhole
	location = ROOT
	situation = from #only does something if from is actually a situation
	trackable = yes

	pre_triggers = { # Ariphaos changes to Pre-Triggers
		has_owner = yes
		original_owner = yes
		is_homeworld = no
		is_ai = no # LS - Moved from trigger section
		is_capital = no
		has_ground_combat = no
		is_occupied_flag = no
	}

	trigger = {
		owner = { # Planetary Diversity
			#is_ai = no # Move to pre-triggers
			NOR = {
				has_country_flag = dportal_country
				has_origin = origin_floating_world
				has_origin = origin_crystal_world
				has_origin = origin_crucible_world
				has_origin = origin_pd_zro_world
				has_origin = origin_pd_hive
				has_origin = origin_archive_world
				has_origin = origin_graveyard_world
				has_origin = origin_graveyard_world
				has_origin = origin_techno_world
				has_origin = origin_pd_hycean_aquatic
				has_origin = origin_pd_rogue_voidfarers
				has_origin = origin_pd_sulfur_springs
				has_origin = origin_pd_ammonia_breathers
				has_origin = origin_pd_shroud
				has_origin = origin_pd_methane_cryogenics
				has_origin = origin_pd_ash_tectonic_drillers
				has_origin = origin_pd_acid_seeders
				has_origin = origin_pd_radiotrophic_mutants
			}
		}
		OR = {
			NOT = { has_global_flag = demonic_incursion_mod_set }
			exists = event_target:doorway_divination_planet
			#owner = { is_ai = no } # Moved to pre-triggers
			owner = { has_country_flag = demonic_incursion_host }
		}
		is_potential_dportal_planet = yes
		# Daemonic Incursion removes the vanilla version
		#owner = {
		#	is_ai = no
		#	NOT = { has_country_flag = dportal_country }
		#}
		#num_pops > 0
		#NOR = {
		#	is_habitat = yes # STU
		#	is_unshattered_ring_habitable_segment = yes # STU
		#	is_shattered_ring_habitable = yes # STU
		#	has_planet_flag = colony_event
		#}
	}

	is_triggered_only = yes

	immediate = {
		set_planet_flag = dportal_event
		set_planet_flag = colony_event
		owner = { set_country_flag = dportal_country }

	}

	option = {
		name = INTRIGUING
		enable_special_project = {
			name = "DPORTAL_PROJECT"
			#location = this # Daemonic Incursion removes this
			owner = root
		}
		if = {
			limit = {
				owner = {
					is_gestalt = yes
				}
			}
			add_deposit = d_portal_research_zone_gestalt
		}
		else = {
			add_deposit = d_portal_research_zone
		}
	}
}