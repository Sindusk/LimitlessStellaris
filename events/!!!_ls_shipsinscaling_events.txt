##########################################################################
# Limitless Stellaris - Real Space: Ships in Scaling Events
##########################################################################

namespace = shipsinscaling

## Called on Game Start
# Scope: No Scope
# LS - Rewrite event to optimize performance.
event = {
	id = shipsinscaling.81
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_galaxy_fleet = { # Scope into every fleet
			every_owned_ship = { # Scope into every ship
				ship_event = { id = shipsinscaling.99 } # LS - New event to properly set the ship speed.
				# LS - None of these events below matter anymore.
				#ship_event = { id = shipsinscaling.3 }
				#ship_event = { id = shipsinscaling.4 }
				#ship_event = { id = shipsinscaling.5 }
				#ship_event = { id = shipsinscaling.6 }
					
				#Longer Battles Mode
				ship_event = { id = shipsinscaling.10 }
			}
		}
	}
}

## Called when a fleet enters a new system
# Scope: Fleet
# LS - Rewrite event to optimize performance.
fleet_event = {
	id = shipsinscaling.98
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_owned_ship = { # Scope into each ship individually
			ship_event = { id = shipsinscaling.99 } # LS - New event to properly set the ship speed.
			# LS - None of these events below matter.
			#ship_event = { id = shipsinscaling.3 }
			#ship_event = { id = shipsinscaling.4 }
			#ship_event = { id = shipsinscaling.5 }
			#ship_event = { id = shipsinscaling.6 }
				
			#Longer Battles Mode
			ship_event = { id = shipsinscaling.10 }
		}
	}
}

## Ship Upgraded or Enabled
# Scope: Ship
# LS - Repurposed and optimized to fix all the issues, and reduce fleet iterations.
ship_event = {
	id = shipsinscaling.99
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_in_combat = no # LS - Only need to apply the modifier if they're not in combat.
		#NOT = { has_global_flag = sustained_ship_acceleration }
	}

	immediate = {
		if = { # LS - Default setting for the collection, lets prioritize it
			limit = { has_global_flag = sustained_ship_acceleration }
			remove_modifier = speed_change_x6 # LS - Our edited version
		}
		else_if = { # LS if -> else_if (for optimization)
		    limit = { has_modifier = speed_change_x1 }
		    remove_modifier = speed_change_x1
		}
		else_if = { # LS if -> else_if (for optimization)
		    limit = { has_modifier = speed_change_x2 }
		    remove_modifier = speed_change_x2
		}
		else_if = { # LS if -> else_if (for optimization)
		    limit = { has_modifier = speed_change_x3 }
		    remove_modifier = speed_change_x3
		}
		else_if = { # LS if -> else_if (for optimization)
		    limit = { has_modifier = speed_change_x4 }
		    remove_modifier = speed_change_x4
		}
		if = { # LS - Default setting for the collection, lets prioritize it
			limit = { has_global_flag = sustained_ship_acceleration }
			if = { # LS - Optimization for performance
				limit = { NOT = { has_modifier = speed_change_x6 } } # LS - Just make sure they don't have the modifier already
				add_modifier = { modifier = speed_change_x6 } # LS - Our edited version
			}
		}
		else_if = { # LS if -> else_if (for optimization)
			limit = {
				OR = {
					has_component = SHIP_THRUSTER_2
					has_component = DESTROYER_SHIP_THRUSTER_2
					has_component = CRUISER_SHIP_THRUSTER_2
					has_component = BATTLESHIP_SHIP_THRUSTER_2
					has_component = TITAN_SHIP_THRUSTER_2
					has_component = COLOSSUS_SHIP_THRUSTER_2
					is_crystal_ship = yes
					is_space_cloud_ship = yes
					is_space_whale_ship = yes
				}
			}
			if = { # LS - Optimization for performance
				limit = { NOT = { has_modifier = speed_change_x1 } } # LS - Just make sure they don't have the modifier already
				add_modifier = { modifier = speed_change_x1 }
			}
		}
		else_if = { # LS if -> else_if (for optimization)
			limit = {
				OR = {
					has_component = SHIP_THRUSTER_3
					has_component = DESTROYER_SHIP_THRUSTER_3
					has_component = CRUISER_SHIP_THRUSTER_3
					has_component = BATTLESHIP_SHIP_THRUSTER_3
					has_component = TITAN_SHIP_THRUSTER_3
					has_component = COLOSSUS_SHIP_THRUSTER_3
					has_component = GUARDIAN_PROPULSION
					is_space_amoeba_ship = yes
				}
			}
			if = { # LS - Optimization for performance
				limit = { NOT = { has_modifier = speed_change_x2 } } # LS - Just make sure they don't have the modifier already
				add_modifier = { modifier = speed_change_x2 }
			}
		}
		else_if = { # LS if -> else_if (for optimization)
			limit = {
				OR = {
					has_component = SHIP_THRUSTER_4
					has_component = DESTROYER_SHIP_THRUSTER_4
					has_component = CRUISER_SHIP_THRUSTER_4
					has_component = BATTLESHIP_SHIP_THRUSTER_4
					has_component = TITAN_SHIP_THRUSTER_4
					has_component = COLOSSUS_SHIP_THRUSTER_4
					is_swarm_ship = yes
				}
			}
			if = { # LS - Optimization for performance
				limit = { NOT = { has_modifier = speed_change_x3 } } # LS - Just make sure they don't have the modifier already
				add_modifier = { modifier = speed_change_x3 }
			}
		}
		else_if = { # LS if -> else_if (for optimization)
			limit = {
				OR = {
					has_component = SHIP_THRUSTER_5
					has_component = DESTROYER_SHIP_THRUSTER_5
					has_component = CRUISER_SHIP_THRUSTER_5
					has_component = BATTLESHIP_SHIP_THRUSTER_5
					has_component = TITAN_SHIP_THRUSTER_5
					has_component = COLOSSUS_SHIP_THRUSTER_5
					is_ed_ship = yes
				}
			}
			if = { # LS - Optimization for performance
				limit = { NOT = { has_modifier = speed_change_x4 } } # LS - Just make sure they don't have the modifier already
				add_modifier = { modifier = speed_change_x4 }
			}
		}
		if = { # LS - Cleanup, just in case they had it from a previous battle and it wasn't removed properly.
			limit = { has_modifier = speed_reduction }
			remove_modifier = speed_reduction # LS - Remove speed modifier if they have it.
		}
	}
}