##########################################################################
# Limitless Stellaris - Events
##########################################################################

namespace = action

##################################################
## Action Events
##################################################

## Action 64 - Assimilate Pops on Yearly Pulse
# AAP version using triggers instead. Triggers overwritten when needed.
event = {
	id = action.64
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_playable_country = {
			num_unique_species > 1
			any_owned_pop_species = {
				count_species_pop = { count > 0 }
				has_citizenship_type = {
					type = citizenship_assimilation
					country = prev
				}
			}
		}
	}
	immediate = {
		log = "action.64"
		set_update_modifiers_batch = begin
		every_playable_country = {
			limit = {
				num_unique_species > 1
				any_owned_pop_species = {
					count_species_pop = { count > 0 }
					has_citizenship_type = {
						type = citizenship_assimilation
						country = prev
					}
				}
			}
			save_event_target_as = assimilating_country
			log = "action.64.every_playable_country: [assimilating_country.GetRealName]"
			every_owned_pop_species = {
				limit = {
					count_species_pop = { count > 0 }
					has_citizenship_type = {
						type = citizenship_assimilation
						country = prev
					}
				}
				log = "action.64.every_owned_pop_species: [This.GetName]"
				if = { # synthetic assimilation
					limit = { is_undergoing_assimilation_synthetic_species = yes }
					choose_synthetic_species = yes
				}
				else_if = { # cybernetic assimilation
					limit = { is_undergoing_assimilation_cyborg_species = yes }
					prepare_cyborg_species = yes
				}
				else_if = { # hive assimilation
					limit = { is_undergoing_assimilation_hive_species = yes }
					prepare_hive_species = yes
				}
				else_if = { # hive deassimilation
					limit = { is_undergoing_assimilation_unhive_species = yes }
					prepare_unhive_species = yes
				}
				else_if = { # psionic assimilation
					limit = { is_undergoing_assimilation_psionic_species = yes }
					prepare_psionic_species = yes
				}
				# else another event better have set the right assimilation flags
			}
			every_owned_planet = {
				log = "action.64.every_owned_planet: [This.GetName]"
				planet_event = {
					id = action.65
				}
			}
		}
		set_update_modifiers_batch = end
	}
}

## Action 85 - Planets in mixed-ownership systems fall to starbase owner
# Merge between Co-Op In Teams, Silfae's Portraits
event = {
	id = action.85
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_country = {
			is_regular_empire = yes # Silfae's Portraits
			NOT = { has_country_flag = is_peepboops } # Silfae's Portraits
			any_owned_planet = {
				exists = starbase
				starbase = {
					exists = owner # Silfae's Portraits
					owner = {
						NOR = {
							is_country = prevprev.owner # Silfae's Portraits
							is_at_war_with = prevprev.owner # Silfae's Portraits
							and = { # Co-Op In Teams
								has_country_flag = is_in_coop_with@prevprevprev
								has_policy_flag = coop_colony_policy_yes
								NOT = { has_global_flag = prevent_colony_outside }
							}
						}
					}
				}
			}
		}
	}

	immediate = {
		every_country = { # Silfae's Portraits changes completely
			limit = {
				is_regular_empire = yes
				NOT = { has_country_flag = is_peepboops }
			}
			every_owned_planet = {
				limit = {
					exists = starbase
					starbase = {
						exists = owner
						owner = {
							NOR = {
								is_country = prevprev.owner
								is_at_war_with = prevprev.owner
								and = { # Co-Op In Teams
									has_country_flag = is_in_coop_with@prevprev.owner
									has_policy_flag = coop_colony_policy_yes
									NOT = { has_global_flag = prevent_colony_outside }
								}
							}
							is_regular_empire = yes
							NOT = { has_active_event = { preftl.180 } } # event to decide fate of pre-ftl civ
						}
					}
				}
				planet_event = {
					id = action.86 # planet flips to starbase owner
				}
			}
		}
	}
}