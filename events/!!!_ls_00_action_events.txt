##########################################################################
# Limitless Stellaris - Events
##########################################################################

namespace = action

##################################################
## Action Events
##################################################

## Action 64 - Assimilate Pops on Yearly Pulse
# AAP version using triggers instead. Triggers overwritten when needed.
event = {
	id = action.64
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_playable_country = {
			num_unique_species > 1
			any_owned_pop_species = {
				count_species_pop = { count > 0 }
				has_citizenship_type = {
					type = citizenship_assimilation
					country = prev
				}
			}
		}
	}
	immediate = {
		log = "action.64"
		set_update_modifiers_batch = begin
		every_playable_country = {
			limit = {
				num_unique_species > 1
				any_owned_pop_species = {
					count_species_pop = { count > 0 }
					has_citizenship_type = {
						type = citizenship_assimilation
						country = prev
					}
				}
			}
			save_event_target_as = assimilating_country
			log = "action.64.every_playable_country: [assimilating_country.GetRealName]"
			every_owned_pop_species = {
				limit = {
					count_species_pop = { count > 0 }
					has_citizenship_type = {
						type = citizenship_assimilation
						country = prev
					}
				}
				log = "action.64.every_owned_pop_species: [This.GetName]"
				if = { # synthetic assimilation
					limit = { is_undergoing_assimilation_synthetic_species = yes }
					choose_synthetic_species = yes
				}
				else_if = { # cybernetic assimilation
					limit = { is_undergoing_assimilation_cyborg_species = yes }
					prepare_cyborg_species = yes
				}
				else_if = { # hive assimilation
					limit = { is_undergoing_assimilation_hive_species = yes }
					prepare_hive_species = yes
				}
				else_if = { # hive deassimilation
					limit = { is_undergoing_assimilation_unhive_species = yes }
					prepare_unhive_species = yes
				}
				else_if = { # psionic assimilation
					limit = { is_undergoing_assimilation_psionic_species = yes }
					prepare_psionic_species = yes
				}
				# else another event better have set the right assimilation flags
			}
			every_owned_planet = {
				log = "action.64.every_owned_planet: [This.GetName]"
				planet_event = {
					id = action.65
				}
			}
		}
		set_update_modifiers_batch = end
	}
}

## Action 85 - Planets in mixed-ownership systems fall to starbase owner
# Merge between Co-Op In Teams, Silfae's Portraits
event = {
	id = action.85
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_country = {
			is_regular_empire = yes # Silfae's Portraits
			NOT = { has_country_flag = is_peepboops } # Silfae's Portraits
			any_owned_planet = {
				exists = starbase
				starbase = {
					exists = owner # Silfae's Portraits
					owner = {
						NOR = {
							is_country = prevprev.owner # Silfae's Portraits
							is_at_war_with = prevprev.owner # Silfae's Portraits
							and = { # Co-Op In Teams
								has_country_flag = is_in_coop_with@prevprevprev
								has_policy_flag = coop_colony_policy_yes
								NOT = { has_global_flag = prevent_colony_outside }
							}
						}
					}
				}
			}
		}
	}

	immediate = {
		every_country = { # Silfae's Portraits changes completely
			limit = {
				is_regular_empire = yes
				NOT = { has_country_flag = is_peepboops }
			}
			every_owned_planet = {
				limit = {
					exists = starbase
					starbase = {
						exists = owner
						owner = {
							NOR = {
								is_country = prevprev.owner
								is_at_war_with = prevprev.owner
								and = { # Co-Op In Teams
									has_country_flag = is_in_coop_with@prevprev.owner
									has_policy_flag = coop_colony_policy_yes
									NOT = { has_global_flag = prevent_colony_outside }
								}
							}
							is_regular_empire = yes
							NOT = { has_active_event = { preftl.180 } } # event to decide fate of pre-ftl civ
						}
					}
				}
				planet_event = {
					id = action.86 # planet flips to starbase owner
				}
			}
		}
	}
}

# Action 98 - Galactic Market Founder luck-of-the-draw
# Galactic Market Foundation Tweak version with some minor adjustments
country_event = {
	id = action.98
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_playable_country = {
			limit = { has_event_chain = market_founding_chain }
			end_event_chain = market_founding_chain
		}
		remove_global_flag = ongoing_market_nomination
		# nominees start equal, modifiers improve chances
		random_galaxy_planet = {
			limit = {
				exists = owner
				owner = {
					is_country_type = default
					has_country_flag = market_nomination_eligible
				}
			}
			weights = {
				base = 1
				# (value)^2 * 5
				modifier = {
					owner = { is_variable_set = market_rating }
					mult = owner.market_rating
				}
				pow = 2
				mult = 5
				# bigger values for bigger fish
				#modifier = { # LS - Removed because it's not a good metric.
				#	mult = owner.trigger:trade_income
				#}
				modifier = {
					factor = 0.001
					NOR = {
						has_modifier = market_nominee_level_1
						has_modifier = market_nominee_level_2
						has_modifier = market_nominee_level_3
						has_modifier = market_nominee_level_4
						has_modifier = market_nominee_level_5
					}
				}
				modifier = {
					mult = solar_system.trigger:has_system_trade_value
					solar_system = {
						has_system_trade_value > 0
					}
				}
			}
			save_global_event_target_as = market_founder_planet
			owner = {
				save_global_event_target_as = market_founder
				country_event = { id = action.99 }
			}
		}
		every_playable_country = {
			limit = { has_country_flag = market_nomination_eligible }
			every_owned_planet = {
				limit = {
					OR = {
						has_modifier = market_nominee_level_1
						has_modifier = market_nominee_level_2
						has_modifier = market_nominee_level_3
						has_modifier = market_nominee_level_4
						has_modifier = market_nominee_level_5
					}
				}
				# remove boosted flags
				if = {
					limit = { has_planet_flag = boosted_once }
					remove_planet_flag = boosted_once
				}
				if = {
					limit = { has_planet_flag = boosted_twice }
					remove_planet_flag = boosted_twice
				}
				# remove modifiers
				if = {
					limit = { has_modifier = market_nominee_level_1 }
					remove_modifier = market_nominee_level_1
				}
				else_if = {
					limit = { has_modifier = market_nominee_level_2 }
					remove_modifier = market_nominee_level_2
				}
				else_if = {
					limit = { has_modifier = market_nominee_level_3 }
					remove_modifier = market_nominee_level_3
				}
				else_if = {
					limit = { has_modifier = market_nominee_level_4 }
					remove_modifier = market_nominee_level_4
				}
				else_if = {
					limit = { has_modifier = market_nominee_level_5 }
					remove_modifier = market_nominee_level_5
				}
			}
			clear_variable = market_rating
		}
	}
}
