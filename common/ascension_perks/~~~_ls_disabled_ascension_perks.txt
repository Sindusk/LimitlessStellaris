##########################################################################
# Limitless Stellaris - Ascension Perks
##########################################################################

##################################################
## Disabled Ascension Perks
##################################################

## Artifact Hunter [Unique Ascension Perks]
# Disabled. Allows players to find more than one precursor, which is redundant with Assorted Precursor Adjustments mod.
ap_artifact_hunter = {
	possible = {
		custom_tooltip = { fail_text = "ap_artifact_hunter_req_1" has_ascension_perk = ap_deep_scanner }
		custom_tooltip = { fail_text = "ap_artifact_hunter_req_2" has_technology = tech_physics_3 }
		custom_tooltip = { fail_text = "ap_artifact_hunter_req_3" has_technology = tech_sensors_3 }
		custom_tooltip = { fail_text = "ap_artifact_hunter_req_4" has_technology = tech_combat_computers_2 }
		has_ancrel = yes
	}
	modifier = {
		# v3.3 halved values
		ship_archaeological_site_excavation_speed_mult = 0.5
		category_archaeostudies_research_speed_mult = 0.15 # v.3.8
		ship_archaeological_site_clues_add = 1
	}
	on_enabled = {
		hidden_effect = {
			country_event = { id = UniqueAscensionPerksEvents.450 }
		}
		custom_tooltip = "ap_artifact_hunter_tooltip"
	}
	potential = {
		always = no # Disabled through potential
		#NOT = { has_ascension_perk = ap_artifact_hunter }
		#OR = {
		#	is_ai = no
		#	event_target:global_event_country = {
		#		check_variable = { which = ap_artifact_hunter value > 0 }
		#	}
		#}		# because ai_weight doesn't work
	}
	ai_weight = { factor = event_target:global_event_country.ap_artifact_hunter }
}

## Ascension Star [Tidy Traditions]
# Disabled. Has no english language translation.
ap_tt_ascension_star = {
	potential = {
		always = no
	}
	possible = {
		always = no
	}
	on_enabled = {
		custom_tooltip = "find_ascension_star"
		hidden_effect = {
			if = {
				limit = { is_ai != yes }
				country_event = { id = TT_ascension_star.1 }
			}
			else_if = {
				limit = { is_ai = yes }
				add_modifier = { modifier = the_road_to_rejuvenation_ai days = -1 }
			}
		}
	}
	ai_weight = {
		factor = 15
	}
}

## Genius Pregnancy [Unique Ascension Perks]
# Disabled. Balance concerns. May revisit later.
ap_genius_cloning = {
	possible = {
		custom_tooltip = { fail_text = "ap_genius_cloning_req_1" has_technology = tech_cloning }
		custom_tooltip = { fail_text = "ap_genius_cloning_req_2" has_technology = tech_housing_2 }
		custom_tooltip = { fail_text = "ap_genius_cloning_req_3" tradition_expansion_finish = yes }
		custom_tooltip = { fail_text = "ap_requires_1_perk" num_ascension_perks > 0 }
	}
	modifier = { pop_growth_speed = 0.15 }	# 0.3 < v3.4
	on_enabled = {
		custom_tooltip = "ap_genius_cloning_tooltip"
		hidden_effect = {
			country_event = { id = UniqueAscensionPerksEvents.41 }
		}
	}
	potential = {
		# LS - Disable through potential.
		always = no
		#NOT = { has_ascension_perk = ap_genius_cloning }
		#OR = {
		#	is_machine_empire = no
		#	has_civic = civic_machine_assimilator
		#	has_civic = civic_machine_servitor
		#}
		#OR = {
		#	is_ai = no
		#	event_target:global_event_country = {
		#		check_variable = { which = ap_genius_cloning value > 0 }
		#	}
		#}		# because ai_weight doesn't work
	}
	ai_weight = {
		factor = event_target:global_event_country.ap_genius_cloning
		modifier = { factor = 5 is_hive_empire = yes }
	}
}

## Slow Learner [Unique Ascension Perks]
# Disabled. Balance concerns. May revisit later.
ap_slow_learner = {
	possible = { }
	modifier = { country_base_unity_produces_add = 10 }	# 50 v3.4 (give more later)
	on_enabled = {
		custom_tooltip = "ap_slow_learner_tooltip"
		hidden_effect = {
			if = {
				limit = {
					NOT = {
						has_active_event = { UniqueAscensionPerksEvents.400 UniqueAscensionPerksEvents.401 }
					}
				}
				country_event = { id = UniqueAscensionPerksEvents.400 }
			}
		}
	}
	potential = {
		always = no # Disabled through potential.
		#NOT = { has_ascension_perk = ap_slow_learner }
		#OR = {
		#	is_ai = no
		#	event_target:global_event_country = {
		#		check_variable = { which = ap_slow_learner value > 0 }
		#	}
		#}		# because ai_weight doesn't work
	}
	ai_weight = { factor = event_target:global_event_country.ap_slow_learner }
}
