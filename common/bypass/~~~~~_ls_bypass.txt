##########################################################################
# Limitless Stellaris - Bypass
##########################################################################

### lgate
## L-Gate Bypass Access
# Merge between Ancient Empire, L-Cluster Access, Nanite Machines, Ariphaos
# Base from L-Cluster Access, additional restrictions by Ariphaos
lgate = {
	name = LGATE_GALACTIC
	is_pathfind = yes
	uses_action = no
	always_active = no
	windup_time = 0
	winddown_time = 0
	ftl_multiplier = 0	# 0 means instant
	icon_frame = 30
	remember_instances = no	# Whether countries remember meeting a specific instance of that type, or if they just remember seeing the type in general.
	galactic_map_tooltip_header = LGATE_GALACTIC
	galactic_map_tooltip_desc = LGATE_GALACTIC_DESC
	connection_type = scripted_connection
	animation_time = 1
	ftl_ship_effect = "gateway_ftl_ship_effect_entity"
	ftl_bypass_effect = "gateway_ftl_bypass_effect_entity"
	# prerequisites = { tech_lgate_activation }
	on_pre_explore = {
		# Fallback for defect savegames.
		if = {
			limit = {
				exists = owner
				has_global_flag = lgates_activated_globally
				owner = {
					has_country_flag = lgates_activated
					has_technology = tech_lgate_activation
				}
			}
			fromfrom = {
				if = {
					limit = { CmtTriggerIsClosedLgate = yes }
					# Enable L-Gates over time
					prev.owner = { country_event = { id = distar.10960 } }
				} else = {
					CmtEffectOpenLgate = yes
					# random_system_megastructure = {
					# 	limit = { CmtTriggerIsOpenedLgate = yes }
					# 	CmtEffectOpenLgate = yes
					# }
				}
			}
		}
	}
	# From = system owner
	country_can_use = {
		custom_tooltip = {
			fail_text = LGATE_COUNTRY_CANNOT_USE
			# exists = this
			# is_scope_type = country
			OR = {
				has_global_flag = lgates_activated_globally
				has_country_flag = lgates_activated
			}
			# Ariphaos Unofficial Patch checks
			is_primitive = no
			is_guardian_country = no
			is_amoeba_country_type = no
			is_tiyanki_country_type = no
			is_crystal_country_type = no
			is_drone_country_type = no
			# Invalid object???
			NOR = {
				is_country_type = amoeba
				is_country_type = amoeba_borderless
				is_country_type = caravaneer_fleet
				is_country_type = crystal
				is_country_type = feral_prethoryn
				is_country_type = guardian
				is_country_type = guardian_dragon
				is_country_type = ldragon_country
				is_country_type = nomad
				is_country_type = origin_dragon
				is_country_type = primitive
				is_country_type = tiyanki
				is_country_type = vluur
			}
		}
	}
	on_action = "on_entering_lgate" # For compatibility (key free to use)
	scripted_connection = {
		# Defines endpoints that can only reach the "nexus"
		node = {
			# System scope
			has_star_flag = lgate
		}
		# Defines endpoint(s) that can reach all "nodes" (but not other nexuses)
		nexus = {
			# System scope
			has_star_flag = lcluster1
		}
	}
}

## Wormhole
# Merge between Gigastructural Engineering, STU
wormhole = {
	name = NATURAL_WORMHOLE_GALACTIC
	is_pathfind = yes
	uses_action = no
	requires_exploration = yes
	always_active = yes
	windup_time = 0
	winddown_time = 0
	ftl_multiplier = 0
	extends_sensors = yes
	icon_frame = 12
	remember_instances = yes
	animation_time = 1
	galactic_map_tooltip_header = NATURAL_WORMHOLE_GALACTIC
	galactic_map_tooltip_desc = NATURAL_WORMHOLE_DESC
	connection_type = one_to_one
	ftl_ship_effect = "wormhole_ftl_ship_effect_entity"
	ftl_bypass_effect = "wormhole_ftl_bypass_effect_entity"
	prerequisites = { tech_wormhole_stabilization }
	potential = { always = yes }
	country_can_use = {
		custom_tooltip = {
			fail_text = NATURAL_WORMHOLE_COUNTRY_CANNOT_USE
			# Wormhole can be used if...
			OR = {
				# System has no owner
				NOT = { exists = from }
				# System's owner has not closed borders to you.
				NOT = { from = { has_closed_borders = root } }
				# System's owner is at war with you.
				from = { is_at_war_with = root }
				# System's owner is not a proper empire.
				from = { is_default_or_fallen = no } # LS optimization
				AND = {
					# System's owner is GC member and you are custodian/emperor
					from = { is_galactic_community_member = yes }
					root = {
						OR = {
							is_galactic_custodian = yes
							is_galactic_emperor = yes
						}
					}
				}
			}
		}
	}
	on_action = "on_entering_wormhole"
}
