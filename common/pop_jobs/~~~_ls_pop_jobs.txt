##########################################################################
# Limitless Stellaris - Pop Jobs
##########################################################################

##################################################
## Expanded Megastructures and Technology
##################################################

## Cloning Technician [Expanded Megastructures and Technology]
# Reduce organic pop assembly from 1.0 to 0.75
cloning_tech = {	
	category = specialist
	condition_string = SPECIALIST_JOB_TRIGGER
	building_icon = building_clinic
	clothes_texture_index = 3

	possible_precalc = can_fill_specialist_job

	planet_modifier = {
		planet_pop_assembly_organic_add = 0.75 # LS 1.0 -> 0.75 [Balance]
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				NOT = { has_valid_civic = civic_dystopian_society }
			}
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_private_healthcare_empire = yes }
		}
		planet_amenities_add = 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_policy_flag = healthcare_for_profit }
		}
		trade_value_add = 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_policy_flag = healthcare_public_private }
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|

	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_policy_flag = healthcare_public_private }
		}
		trade_value_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|

	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_policy_flag = healthcare_universal }
		}
		trade_value_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|

	}
	
	triggered_planet_modifier = {
		potential = {
			owner = { is_private_healthcare_empire = { allow_invalid = yes } }
		}
		trade_value_add = 8
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|

	}
	
	resources = {
		category = planet_doctors
		produces = {
			society_research = 5
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_policy_flag = charitable_healthcare }
			}
			unity = 4
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_policy_flag = research_healthcare }
			}
			society_research = 4
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					exists = assembling_species
					assembling_species = { is_lithoid = no }
				}
			}
			food = 10
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					exists = assembling_species
					assembling_species = { is_lithoid = yes }
				}
			}
			minerals = 10
		}
	}
		
	weight = {
		weight = @spawner_drone_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
			owner = {
				OR = {
					is_private_healthcare_empire = { allow_invalid = yes }
					has_policy_flag = healthcare_public_private
					has_policy_flag = healthcare_for_profit
				}
			}
		}
		modifier = {
			mult = value:job_weights_multiple_resources_modifier|JOB|cloning_tech|RESOURCE1|unity|WEIGHT1|0.5|RESOURCE2|society_research|WEIGHT2|0.5|
			owner = {
				has_policy_flag = charitable_healthcare
			}
		}
		modifier = {
			mult = value:job_weights_modifier|JOB|cloning_tech|RESOURCE|society_research|
			owner = {
				NOT = { has_policy_flag = charitable_healthcare }
			}
		}
		modifier = {
			factor = 1000
			owner = { has_origin = origin_clones }
		}
		modifier = {
			factor = 0.2
			has_citizenship_rights = no	
			NOT = { has_trait = trait_mechanical }	
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.5
			has_job = cloning_tech
		}
		modifier = {
			factor = 0.5
			is_enslaved = yes
		}
		modifier = {
			factor = 0.01
			has_living_standard = { type = living_standard_chemical_bliss }
		}
	}
}

## Cloning Drone [Expanded Megastructures and Technology]
# Reduce organic pop assembly from 1.0 to 0.75
cloning_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_spawning_pool
	icon = cloning_tech
	
	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { has_trait = trait_syncretic_proles }
		NOT = { has_trait = trait_nerve_stapled }
		NOT = { has_trait = trait_presapient_docile_livestock }	
	}
	
	planet_modifier = {
		planet_pop_assembly_organic_add = 0.75 # LS 1.0 -> 0.75 [Balance]
	}
	
	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_no_happiness_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_policy_flag = basic_healthcare }
		}
		planet_amenities_no_happiness_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_policy_flag = extensive_healthcare }
		}
		planet_amenities_no_happiness_add = 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|

	}

	resources = {
		category = planet_doctors
		produces = {
			society_research = 5
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					exists = assembling_species
					assembling_species = { is_lithoid = no }
				}
			}
			food = 10
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					exists = assembling_species
					assembling_species = { is_lithoid = yes }
				}
			}
			minerals = 10
		}
	}
	
	weight = {
		weight = @spawner_drone_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|cloning_tech|RESOURCE1|unity|WEIGHT1|0.5|RESOURCE2|society_research|WEIGHT2|0.5|
		modifier = {
			factor = 0
			NOT = { is_pop_category = complex_drone }
			exists = planet
			planet = { NOT = { has_available_jobs = "cloning_drone" } }
		}
		modifier = {
			factor = 0.5 # job is less useful if pop control is active, but still gives amenities 
			planet = {
				has_modifier = planet_population_control_gestalt
			}
		}
		modifier = {
			factor = 0 # crisis purge
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}
