##########################################################################
# Limitless Stellaris - Jobs
##########################################################################

##################################################
## Rulers
##################################################

## Head Researcher
# Merge between OSA, Silfae's Portraits
head_researcher = {
	category = ruler
	condition_string = RULER_JOB_TRIGGER
	building_icon = building_institute
	clothes_texture_index = 1
	icon = researcher

	possible_pre_triggers = {
		has_owner = yes
		#is_enslaved = no # Silfae's Portraits removes this
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job
	possible = { # Silfae's Portraits
		OR = {
			is_enslaved = no
			AND = {
				has_species_trait_hologanglion = yes
				owner = { has_origin = origin_holofrixit }
			}
		}
	}
	resources = {
		category = planet_researchers
		produces = {
			unity = 2
			physics_research = 5 # OSA 6 -> 5
			engineering_research = 5 # OSA 6 -> 5
			society_research = 5 # OSA 6 -> 5
		}
		produces = { # OSA
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_technocracy }
			}
			unity = 1
		}
		upkeep = {
			consumer_goods = 2
		}
		upkeep = {
			trigger = {
				exists = planet # Silfae's Portraits
				planet = { has_planet_flag = has_science_ministry }
			}
			consumer_goods = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		produces = {
			trigger = {
				exists = planet # Silfae's Portraits
				planet = { has_planet_flag = has_science_ministry }
			}
			physics_research = 3
			engineering_research = 3
			society_research = 3
		}
	}

	triggered_pop_modifier = {
		potential = {
			planet = {
				exists = army_leader
				army_leader = {
					has_trait = leader_trait_academia_recruiter
				}
			}
		}
		modifier = {
			pop_defense_armies_add = 1
		}
	}

	# This needs to be triggered planet modifier to get the correct scope.
	triggered_planet_modifier = {
		potential = { always = yes }
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @ruler_job_weight
		mult = value:job_weights_research_modifier|JOB|head_researcher|
		mult = value:job_weights_modifier|JOB|head_researcher|RESOURCE|unity|FACTOR|0.25|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			is_robot_pop = no # Silfae's Portraits
		}
		modifier = {
			factor = 2
			has_living_standard = {
				type = living_standard_academic_privilege
				country = owner # Silfae's Portraits
			}
		}
		modifier = {
			factor = 5
			has_job = head_researcher
		}
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
		modifier = { # Silfae's Portraits
			factor = 10
			has_species_trait_hologanglion = yes
		}
	}
}

## High Priest
# Merge between OSA, Bug Branch, Planetary Diversity: Shroud Worlds
high_priest = {
	category = ruler
	condition_string = RULER_JOB_TRIGGER
	building_icon = building_citadel_of_faith
	clothes_texture_index = 1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job
	possible = {
		NOT = { has_ethic = ethic_materialist }
	}

	resources = {
		category = planet_priests
		produces = {
			unity = 10 # OSA 6 -> 10
			society_research = 5 # OSA
		}
		produces = { # OSA
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_exalted_priesthood }
			}
			unity = 1
		}
		produces = { # Planetary Diversity: Shroud Worlds
			trigger = {
				exists = owner
				owner = { has_country_flag = whisperers_covenant_confirmed }
				planet = { has_deposit = d_pd_shroud_arc }
			}
			physics_research = 1
			engineering_research = 1
			society_research = 1
		}
		upkeep = {
			consumer_goods = 2
		}
		produces = { # Bug Branch
			trigger = {
				owner = {  is_bugged_governmental_spiritualist = yes  }
			}
			unity = 1
		}
	}

	triggered_planet_modifier = { # Bug Branch
		potential = {
			exists = owner
			owner = { 
				is_bugged_machine_cult = yes
			}
		}
		modifier = {
			planet_jobs_engineering_research_produces_mult = 0.05
		}
	}

	triggered_planet_modifier = { # Bug Branch
		potential = {
			exists = owner
			owner = { 
				is_bugged_life_cult = yes
			}
		}
		modifier = {
			planet_jobs_society_research_produces_mult = 0.05
		}
	}

	triggered_planet_modifier = { # Bug Branch
		potential = {
			exists = owner
			owner = { 
				is_bugged_gravity_cult = yes
			}
		}
		modifier = {
			planet_jobs_physics_research_produces_mult = 0.05
		}
	}
	
	triggered_planet_modifier = { # Bug Branch
		potential = {
			always = yes
		}
		bugged_priest_amenities_mult = 0.1
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	inline_script = "jobs/pd_priest_outputs" # Planetary Diversity: Shroud Worlds

	weight = {
		weight = @ruler_job_weight
		mult = value:job_weights_modifier|JOB|high_priest|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.1
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 5
			has_job = high_priest
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}

## Politician
# Merge between OSA, Bug Branch
politician = {
	category = ruler
	condition_string = RULER_JOB_TRIGGER
	building_icon = building_capital
	clothes_texture_index = 1
	icon = administrator

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job

	resources = {
		category = planet_politicians
		produces = {
			unity = 8 # OSA 6 -> 8
		}
		upkeep = {
			consumer_goods = 2
		}
	}
	
	country_modifier = {
		country_edict_fund_add = 2 # OSA
	}


	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 4 # OSA 3 -> 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = { # Bug Branch
		potential = {
			exists = owner
			owner = {
				is_bugged_government_intervention = yes
			}
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @ruler_job_weight
		mult = value:job_weights_modifier|JOB|politician|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.1
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 5
			has_job = politician
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}

## Noble
# Merge between OSA, Bug Branch
noble = {
	category = ruler
	condition_string = RULER_JOB_TRIGGER
	building_icon = building_palace
	clothes_texture_index = 1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job

	resources = {
		category = planet_nobles
		produces = {
			unity = 7 # OSA 6 -> 7
		}
		upkeep = {
			consumer_goods = 2
		}
	}

	planet_modifier = {
		planet_stability_add = 5 # OSA 2 -> 5
	}

	triggered_planet_modifier = { # Bug Branch
		potential = {
			exists = owner
			owner = {
				has_valid_civic = civic_bugged_highborn_sovereignty
			}
		}
		planet_stability_add = 1
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @ruler_job_weight
		mult = value:job_weights_modifier|JOB|noble|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.1
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 5
			has_job = noble
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
			OR = { # contingency won't purge itself
				NOT = { exists = event_target:custodian_bot }
				AND = {
					exists = event_target:custodian_bot
					NOT = { species = { is_same_value = event_target:custodian_bot } }
				}
			}
		}
	}
}

## Merchant
# Merge between OSA, Venture Politics, Bug Branch
merchant = {
	category = ruler
	condition_string = RULER_JOB_TRIGGER
	building_icon = building_galactic_stock_exchange
	clothes_texture_index = 1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job

	resources = {
		category = planet_merchants
		produces = { # OSA
			unity = 4
		}
		produces = { # OSA
			trigger = {
				exists = owner
				owner = { has_civic = civic_merchant_guilds	}
			}
			unity = 2
		}
		upkeep = {
			consumer_goods = 2
		}
		produces = { # Bug Branch
			trigger = {
				owner = { is_bugged_governmental_competitive = yes }
			}
			unity = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 12
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 4 # OSA 3 -> 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}
	
	triggered_planet_modifier = { # Venture Politics
		potential = {
			has_councilor = { COUNCILOR = "councilor_bancorp" }
		}

		trade_value_add = 0.8
		mult = value:scripted_modifier_councilor_level_mult|MODIFIER|pop_job_trade_mult|TYPE|councilor_bancorp|
	}

	triggered_planet_modifier = { # Bug Branch
		potential = {
			always = yes
		}
		trade_value_add = 1
		mult = value:bugged_stock_exchange_tv
	}

	weight = {
		weight = @ruler_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 5
			has_job = merchant
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
			OR = { # contingency won't purge itself
				NOT = { exists = event_target:custodian_bot }
				AND = {
					exists = event_target:custodian_bot
					NOT = { species = { is_same_value = event_target:custodian_bot } }
				}
			}
		}
	}
}

## Executive
# Merge between OSA, Bug Branch
executive = {
	category = ruler
	condition_string = RULER_JOB_TRIGGER
	building_icon = building_capital
	clothes_texture_index = 1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job

	resources = {
		category = planet_executives
		produces = {
			society_research = 4 # OSA
			unity = 6
		}
		upkeep = {
			consumer_goods = 2
		}
		produces = { # Bug Branch
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_bugged_megacorp_researcher }
			}
			unity = -2
			physics_research = 3
			society_research = 3
			engineering_research = 3
		}
	}

	triggered_planet_modifier = { # Bug Branch
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_bugged_megacorp_researcher }
		}
		planet_researchers_upkeep_mult = -0.05
	}

	triggered_planet_modifier = { # Bug Branch
		potential = {
			exists = owner
			owner = {
				is_bugged_welfare_state = yes
			}
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		trade_value_add = 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = { # Bug Branch
		potential = {
			always = yes
		}
		trade_value_add = 1
		mult = value:bugged_stock_exchange_tv
	}

	weight = {
		weight = @ruler_job_weight
		mult = value:job_weights_modifier|JOB|executive|RESOURCE|unity|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|
		modifier = {
			factor = 5
			has_job = executive
		}
		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
			OR = { # contingency won't purge itself
				NOT = { exists = event_target:custodian_bot }
				AND = {
					exists = event_target:custodian_bot
					NOT = { species = { is_same_value = event_target:custodian_bot } }
				}
			}
		}
	}
}

## Knight Commander
# Vanilla
knight_commander = {
	category = ruler
	condition_string = RULER_JOB_TRIGGER
	building_icon = building_order_keep
	clothes_texture_index = 1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job
	possible = {
		hidden_trigger = { exists = owner }
		owner = {
			is_gestalt = no
		}
	}

	resources = {
		category = knights_independent_category
		produces = {
			trigger = { exists = owner }
			unity = 4
			mult = value:knight_commander_unity_output_modifier
		}
		produces = {
			trigger = { exists = owner }
			physics_research = 2
			engineering_research = 2
			society_research = 2
			mult = value:knight_commander_research_output_modifier
		}
		upkeep = {
			alloys = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = {
		country_naval_cap_add = 6
		mult = value:scripted_modifier_mult|MODIFIER|knights_independent_category_produces_mult|
	}

	weight = {
		weight = @high_prio_specialist_job_weight
		modifier = {
			mult = value:job_weights_modifier|JOB|bureaucrat|RESOURCE|unity|
			owner = { has_country_flag = toxoids_7011_a }
		}
		modifier = {
			mult = value:job_weights_research_modifier|JOB|researcher|
			owner = { has_country_flag = toxoids_7011_b }
		}
	}
}
