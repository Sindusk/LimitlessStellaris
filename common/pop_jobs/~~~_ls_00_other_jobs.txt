##########################################################################
# Limitless Stellaris - Pop Jobs
##########################################################################

##################################################
## Other
##################################################

## Servant
# Vanilla
servant = {
	category = worker
	is_capped_by_modifier = no
	building_icon = building_luxury_residence
	clothes_texture_index = 2

	possible_pre_triggers = {
		is_sapient = yes
	}

	possible = {
		can_take_servant_job = yes
	}

	resources = {}

	triggered_pop_modifier = {
		potential = {
			is_organic_species = yes
		}
		pop_housing_usage_add = -0.5
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_pleasure_seeker = yes }
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @special_job_weight
	}
}

## Slave Overseer [Vanilla]
# DTM version
slave_overseer = {
	category = worker
	is_capped_by_modifier = yes
	building_icon = building_crude_huts
	clothes_texture_index = 3
	icon = enforcer

	possible_pre_triggers = {
		is_enslaved = yes
		has_planet = yes
		is_sapient = yes
	}

	possible = {
		planet = { has_modifier = slave_colony }
		NOT = { has_trait = trait_robot_simplistic_morality } # DTM
	}

	resources = {
		category = planet_enforcers
		upkeep = {
			trigger = {
				planet = { has_modifier = anticrime_campaign }
			}
			energy = 2
		}
	}

	pop_modifier = {
		pop_happiness = 0.25
		pop_defense_armies_add = 2
	}

	planet_modifier = {
		planet_crime_add = -25
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_domination_judgment_corps }
		}
		modifier = {
			planet_crime_add = -5
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = { has_modifier = anticrime_campaign }
		}
		modifier = {
			planet_crime_add = -10
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_pleasure_seeker = yes }
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	}
}

## Slave Toiler
# Vanilla
slave_toiler = {
	category = worker
	is_capped_by_modifier = no
	building_icon = building_crude_huts
	clothes_texture_index = 3
	icon = primitive_laborer

	possible_pre_triggers = {
		is_enslaved = yes
		has_planet = yes
		is_sapient = yes
	}

	possible = {
		planet = { has_modifier = slave_colony }
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_pleasure_seeker = yes }
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @special_job_weight
	}
}

## Organic Battery
# Plentiful Traditions version
organic_battery = {
	category = worker
	is_capped_by_modifier = no
	clothes_texture_index = 2

	pop_modifier = {
		pop_housing_usage_add = -0.5
	}

	possible_pre_triggers = {
		is_enslaved = yes
		is_sapient = yes
	}

	possible = {
		has_citizenship_type = { type = citizenship_slavery country = owner }
		has_slavery_type = { type = slavery_matrix }
	}

	resources = {
		category = planet_jobs
		produces = {
			energy = 4
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_energy_grid }
			}
			energy = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_energy_nexus }
			}
			energy = 2
		}	
		produces = { # Plentiful Traditions
			trigger = {
				owner = { has_active_tradition = tr_plentiful_biogenesis_machine_1 }
			}
			energy = 2
		}
	}

	weight = {
		weight = @special_job_weight
	}
}

## Livestock
# Bug Branch version
livestock = {
	category = worker
	is_capped_by_modifier = no
	clothes_texture_index = 2

	pop_modifier = {
		pop_housing_usage_add = -0.5
		pop_political_power = -0.1
	}

	possible_pre_triggers = {
		is_enslaved = yes
		is_sapient = yes
	}

	possible = {
		has_citizenship_type = { type = citizenship_slavery country = owner }
		has_slavery_type = { type = slavery_livestock }
	}

	resources = {
		category = planet_livestock
		produces = {
			trigger = {
				is_organic_species = yes
				is_lithoid = no
			}
			food = 4
		}
		produces = {
			trigger = {
				is_organic_species = yes
				is_lithoid = no
				planet = { has_active_building = building_food_processing_facility }
			}
			food = 1
		}
		produces = {
			trigger = {
				is_organic_species = yes
				is_lithoid = no
				planet = { has_active_building = building_food_processing_center }
			}
			food = 2
		}
		produces = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 2
		}
		produces = {
			trigger = {
				is_lithoid = yes
				planet = { has_active_building = building_mineral_purification_plant }
			}
			minerals = 1
		}
		produces = {
			trigger = {
				is_lithoid = yes
				planet = { has_active_building = building_mineral_purification_hub }
			}
			minerals = 2
		}
	}

	triggered_planet_modifier = { # Bug Branch
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_bugged_organs_corpo }
		}
		trade_value_add = 2
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
	}

	triggered_planet_modifier = { # Bug Branch
		potential = {
			owner = {
				has_valid_civic = civic_bugged_organs_corpo
			}
		}
		trade_value_add = 1
		mult = value:bugged_stock_exchange_tv
	}

	weight = {
		weight = @special_job_weight
	}
}

## Livestock (Zoo Animal)
# Vanilla
livestock_zoo_animal = {
	category = worker
	is_capped_by_modifier = yes
	clothes_texture_index = 2

	possible_pre_triggers = {
		is_enslaved = yes
		is_sapient = yes
	}

	possible = {
		has_citizenship_type = { type = citizenship_slavery country = owner }
		has_slavery_type = { type = slavery_livestock }
		planet = {
			exists = owner
			owner = {
				NOT = { has_valid_civic = civic_warrior_culture }
			}
			has_active_building = building_xeno_zoo
		}
	}

	pop_modifier = {
		pop_amenities_usage_add = -0.75
		pop_housing_usage_add = -0.5
		pop_political_power = -0.1
	}

	resources = {
		category = planet_livestock
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			food = 1
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 1
		}
	}

	triggered_planet_modifier = {
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @special_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 1.5
			NOT = { has_job = livestock_zoo_animal }
			exists = planet
			planet = {
				free_amenities < 5
			}
		}
	}
}

## Livestock (Zoo Beast)
# Vanilla
livestock_zoo_beast = {
	category = worker
	is_capped_by_modifier = yes
	clothes_texture_index = 2

	possible_pre_triggers = {
		is_enslaved = yes
		is_sapient = yes
	}

	possible = {
		has_citizenship_type = { type = citizenship_slavery country = owner }
		has_slavery_type = { type = slavery_livestock }
		planet = {
			exists = owner
			owner = {
				has_valid_civic = civic_warrior_culture
			}
			has_active_building = building_xeno_zoo
		}
	}

	pop_modifier = {
		pop_amenities_usage_add = -0.75
		pop_housing_usage_add = -0.5
		pop_political_power = -0.1
	}

	resources = {
		category = planet_livestock
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			food = 1
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 1
		}
	}

	triggered_planet_modifier = {
		planet_amenities_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @special_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 1.05
			NOT = { has_job = livestock_zoo_beast }
			exists = planet
			planet = {
				free_amenities < 5
			}
		}
	}
}

## Bio-Trophy
# Merge betweeen OSA, Bug Branch, NGS
bio_trophy = {
	category = bio_trophy
	clothes_texture_index = 1
	building_icon = building_organic_sanctuary

	possible_pre_triggers = {
		is_sapient = yes
	}

	possible = {
		has_citizenship_type = { type = citizenship_organic_trophy country = owner }
	}

	resources = {
		category = planet_bio_trophies
		produces = {
			trigger = {
				happiness >= 0.5
			}
			unity = 2 # NGS 3 -> 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			happiness >= 0.5
		}
		modifier = {
			planet_jobs_complex_drone_produces_mult = 0.01
		}
	}

	inline_script = "jobs/bugged_admin_megastructure_effects" # Bug Branch

	triggered_country_modifier = { # NGS
		potential = {
			exists = owner
			owner = {
				has_edict = servitor_edict
			}
		}
		modifier = {
			planet_jobs_complex_drone_produces_mult = 0.001
			planet_amenities_mult = 0.001
		}
	}
	triggered_pop_modifier = {
		pop_housing_usage_add = -1
	}

	weight = {
		weight = @special_job_weight
	}
}

## Purge [Vanilla]
# Merge between Organic Zealots, OSA, Bug Branch, DTM
purge = {
	category = purge
	is_capped_by_modifier = no
	clothes_texture_index = 2

	ignores_sapience = yes

	possible = {
		exists = owner
		OR = {
			has_citizenship_type = {
				type = citizenship_purge_machine
				country = owner
			}
			has_citizenship_type = {
				type = citizenship_purge
				country = owner
			}
			has_pop_flag = event_purge
		}
	}

	resources = {
		category = planet_jobs_purge # DTM jobs -> jobs_purge
		produces = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_fanatic_purifiers }
			}
			unity = 2
		}
		produces = { # Oganic Zealots
			trigger = {
				is_robotic_species = yes
				exists = owner
				owner = { is_valid_organic_zealots = yes }
			}
			unity = 2
		}
		produces = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_hive_devouring_swarm }
			}
			society_research = 2
		}
		produces = { # regular processing
			trigger = {
				has_purge_type = { type = purge_processing }
				is_robotic_species = no
				is_lithoid = no
			}
			food = 6
		}
		produces = { # regular processing
			trigger = {
				has_purge_type = { type = purge_processing }
				is_lithoid = yes
			}
			minerals = 4
		}
		produces = { # processing robots (devouring swarm)
			trigger = {
				has_purge_type = { type = purge_processing }
				is_robotic_species = yes
			}
			alloys = 3
		}
		produces = { # Bug Branch
			trigger = {
				has_purge_type = { type = bugged_purge_petrification }
				is_robotic_species = no
				is_lithoid = no
			}
			minerals = 4
		}
		produces = { # Bug Branch
			trigger = {
				has_purge_type = { type = bugged_purge_petrification }
				is_lithoid = yes
			}
			minerals = 4
		}
		produces = { # Bug Branch
			trigger = {
				has_purge_type = { type = bugged_purge_petrification }
				is_robotic_species = yes
			}
			alloys = 3
		}
		produces = {
			trigger = {
				has_purge_type = { type = purge_matrix }
			}
			energy = 6
		}
		produces = {
			trigger = {
				has_purge_type = { type = purge_labor_camps }
			}
			food = 3
			minerals = 3
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_food_processing_facility }
				OR = {
					has_purge_type = { type = purge_labor_camps }
					AND = {
						has_purge_type = { type = purge_processing }
						is_robotic_species = no
						is_lithoid = no
					}
				}
			}
			food = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_food_processing_center }
				OR = {
					has_purge_type = { type = purge_labor_camps }
					AND = {
						has_purge_type = { type = purge_processing }
						is_robotic_species = no
						is_lithoid = no
					}
				}
			}
			food = 2
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_mineral_purification_plant }
				OR = {
					has_purge_type = { type = purge_labor_camps }
					AND = {
						has_purge_type = { type = purge_processing }
						is_lithoid = yes
					}
				}
			}
			minerals = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_mineral_purification_hub }
				OR = {
					has_purge_type = { type = purge_labor_camps }
					AND = {
						has_purge_type = { type = purge_processing }
						is_lithoid = yes
					}
				}
			}
			minerals = 2
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_foundry_2 }
				has_purge_type = { type = purge_processing }
				is_robotic_species = yes
			}
			alloys = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_foundry_3 }
				has_purge_type = { type = purge_processing }
				is_robotic_species = yes
			}
			alloys = 2
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_energy_grid }
				has_purge_type = { type = purge_matrix }
			}
			energy = 1
		}
		produces = {
			trigger = {
				planet = { has_active_building = building_energy_nexus }
				has_purge_type = { type = purge_matrix }
			}
			energy = 2
		}
	}

	weight = {
		weight = @special_job_weight

		modifier = {
			factor = 200 # brings @special_job_weight up to 2
			exists = planet
			exists = planet.controller
			OR = {
				has_pop_flag = event_purge
				planet.controller = {
					OR = {
						is_country_type = swarm
						is_country_type = ai_empire
					}
				}
			}
		}

		modifier = {
			factor = 9999 # u die when flagged
			has_pop_flag = event_purge
		}

		modifier = {
			factor = 9999 # u die when crisis'd
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
					# extradimensionals just bombard you
				}
			}
		}
	}
}

## Crisis Purge
# Vanilla
crisis_purge = {
	icon = purge
	category = purge
	purge = purge_normal
	is_capped_by_modifier = no
	clothes_texture_index = 2
	ignores_sapience = yes

	possible_pre_triggers = {
		is_sapient = yes
	}

	possible = { # controlled by crisis
		exists = planet
		exists = planet.controller
		planet.controller = {
			OR = {
				is_country_type = swarm
				is_country_type = ai_empire
			}
		}
		OR = { # contingency won't purge itself
			NOT = { exists = event_target:custodian_bot }
			AND = {
				exists = event_target:custodian_bot
				NOT = { species = { is_same_value = event_target:custodian_bot } }
			}
		}
	}

	weight = {
		weight = @special_job_weight

		modifier = {
			factor = 200 # brings @special_job_weight up to 2
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}

		modifier = {
			factor = 9999 # u die when crisis'd
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
					# extradimensionals just bombard you
				}
			}
		}
	}
}

## Assimilation
# Vanilla
assimilation = {
	category = assimilation
	is_capped_by_modifier = no
	clothes_texture_index = 2

	possible_pre_triggers = {
		is_sapient = yes
	}

	ignores_sapience = yes

	possible = {
		exists = owner
		has_citizenship_type = { type = citizenship_assimilation country = owner }
	}

	resources = {
		category = planet_jobs
		upkeep = {
			trigger = {
				has_phototrophic_energy_upkeep = yes
			}
			energy = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = no
			}
			food = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				has_food_upkeep = yes
				is_phototrophic = yes
			}
			food = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				has_mineral_upkeep = yes
				is_phototrophic = no
			}
			minerals = @living_standard_food_normal
		}
		upkeep = {
			trigger = {
				has_mineral_upkeep = yes
				is_phototrophic = yes
			}
			minerals = @living_standard_phototrophic_normal
		}
		upkeep = {
			trigger = {
				is_robotic_or_voidspawn_species = yes
			}
			energy = @living_standard_energy_normal
		}
	}

	weight = {
		weight = @special_job_weight

		modifier = {
			factor = 200 # brings @special_job_weight up to 2
			is_being_assimilated = yes
		}
	}
}

## Criminal
# Merge between OSA, DTM, Ariphaos
criminal = {
	category = criminal
	is_capped_by_modifier = yes
	can_set_priority = no
	clothes_texture_index = 2
	building_icon = building_residence
	contributes_to_diplo_weight = no
	ignores_favorite = yes #this means that if you favorite e.g. clerks, the +1000 bonus will not matter for jobs working as criminals

	possible_pre_triggers = {
		has_owner = yes
		is_sapient = yes
	}

	possible = {
		# check that this is not a robot in servitude
		NOT = {
			has_citizenship_type = {
				country = owner
				type = citizenship_robot_servitude
			}
		}
		owner = {
			is_gestalt = no
		}
	}

	resources = { # OSA
		category = planet_jobs
		upkeep = {
			alloys = 2
			energy = 2
			minerals = 4
			physics_research = 2
			engineering_research = 2
			society_research = 2
			consumer_goods = 2
			unity = 2
		}
	}

	#planet_modifier = { # DTM converts to triggered
	#	trade_value_add = -5
	#	branch_office_criminal_syndicate_value_add = 7.5
	#}
	triggered_planet_modifier = { # DTM converts to triggered
		potential = { # LS - adding for clarity
			always = yes
		}
		modifier = {
			trade_value_add = -5
			branch_office_criminal_syndicate_value_add = 7.5
		}
		mult = value:scripted_modifier_mult|MODIFIER|criminal_job_effect_mult|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				has_branch_office = yes
				branch_office_owner = {
					has_councilor = { COUNCILOR = "councilor_criminal_heritage" }
				}
			}
		}

		branch_office_criminal_syndicate_value_add = 0.25
		mult = value:pop_branch_office_councilor_level|TYPE|councilor_criminal_heritage|
	}

	weight = {
		weight = @criminal_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|criminal_job_effect_mult| # DTM
	}
}

## Deviant Drone
# OSA version
deviant_drone = {
	category = deviant_drone
	is_capped_by_modifier = yes
	can_set_priority = no
	clothes_texture_index = 2
	icon = criminal
	contributes_to_diplo_weight = no
	ignores_favorite = yes

	possible_pre_triggers = {
		has_planet = yes
		is_sapient = yes
	}

	possible = {
		planet = { has_modifier = drone_deviancy }
	}

	resources = {
		category = planet_jobs
		upkeep = {
			alloys = 4 # OSA
			energy = 5 # OSA 1 -> 5
			minerals = 5 # OSA
			physics_research = 2 # OSA
			engineering_research = 2 # OSA
			society_research = 2 # OSA
			unity = 2 # OSA
		}
	}

	weight = {
		weight = @criminal_job_weight
	}
}

## Corrupt Drone
# OSA version
corrupt_drone = {
	category = corrupt_drone
	is_capped_by_modifier = yes
	can_set_priority = no
	clothes_texture_index = 2
	icon = criminal
	contributes_to_diplo_weight = no
	ignores_favorite = yes

	possible_pre_triggers = {
		has_planet = yes
		is_sapient = yes
	}
	possible = {
		planet = { has_modifier = drone_corruption }
	}

	resources = {
		category = planet_jobs
		upkeep = {
			alloys = 4 # OSA
			energy = 5 # OSA 1 -> 5
			minerals = 5 # OSA
			physics_research = 2 # OSA
			engineering_research = 2 # OSA
			society_research = 2 # OSA
			unity = 2 # OSA
		}
	}

	weight = {
		weight = @criminal_job_weight
	}
}

## Fear of the Dark Protectors
# Vanilla
fotd_protectors = {
	is_capped_by_modifier = no
	category = worker
	building_icon = building_fortress
	icon = enforcer
	clothes_texture_index = 2

	possible_pre_triggers = {
		has_owner = yes
		is_sapient = yes
	}

	possible = {
		owner = {
			is_primitive = yes
			has_origin = origin_fear_of_the_dark
		}
	}

	resources = {
	}

	planet_modifier = {
		planet_crime_add = -5
		planet_stability_add = 2
	}
	pop_modifier = {
		pop_defense_armies_add = 1
	}

	weight = {
		weight = 0.1

		# crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}
}
