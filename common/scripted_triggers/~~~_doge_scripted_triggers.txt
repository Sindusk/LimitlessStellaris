####################################################################################################
# Doge Scripted Triggers
####################################################################################################

##################################################
## Building Checks
##################################################
## doge_has_energy_grid: Checks if the planet has an energy grid building.
# Context: Planet
doge_can_build_energy_grid = {
        NOR = {
                num_buildings = { type = building_energy_grid value > 0 in_construction = no }
                num_buildings = { type = building_energy_nexus value > 0 in_construction = no }
                num_buildings = { type = building_roci_class_4_singularity_mod value > 0 in_construction = no }
                num_buildings = { type = building_giga_energy_nexus_1 value > 0 in_construction = no }
                num_buildings = { type = building_fe_power_hub value > 0 in_construction = no }
	}
}

## doge_can_build_mineral_purification: Checks if the planet has a mineral purification building.
# Context: Planet
doge_can_build_mineral_purification = {
        NOR = {
                num_buildings = { type = building_mineral_purification_plant value > 0 in_construction = no }
                num_buildings = { type = building_mineral_purification_hub value > 0 in_construction = no }
                num_buildings = { type = building_roci_dimensional_fabricator_mod value > 0 in_construction = no }
                num_buildings = { type = building_fe_mineral_processing_plant value > 0 in_construction = no }
	}
}

## doge_can_build_food_processing: Checks if the planet has a food processing building.
# Context: Planet
doge_can_build_food_processing = {
        NOR = {
                num_buildings = { type = building_food_processing_facility value > 0 in_construction = no }
                num_buildings = { type = building_food_processing_center value > 0 in_construction = no }
                num_buildings = { type = building_roci_nourishment_center_mod value > 0 in_construction = no }
                num_buildings = { type = building_fe_food_processing_complex value > 0 in_construction = no }
        }
}

## doge_can_build_stock_exchange: Checks if the planet has a stock exchange upgrade building.
# Context: Planet
doge_can_build_stock_exchange = {
        NOR = {
                num_buildings = { type = building_galactic_stock_exchange value > 0 in_construction = no }
        }
}

## doge_can_build_alloy_foundry: Checks if the planet has an alloy foundry upgrade building.
# Context: Planet
doge_can_build_alloy_foundry = {
        NOR = {
                num_buildings = { type = building_foundry_1 value > 0 in_construction = no }
                num_buildings = { type = building_foundry_2 value > 0 in_construction = no }
                num_buildings = { type = building_foundry_3 value > 0 in_construction = no }
                num_buildings = { type = building_roci_nano_forge_mod value > 0 in_construction = no }
                num_buildings = { type = building_fe_alloy_forge value > 0 in_construction = no }
        }
}

## doge_can_build_civilian_industry: Checks if the planet has a civilian industry upgrade building.
# Context: Planet
doge_can_build_civilian_industry = {
        NOR = {
                num_buildings = { type = building_factory_1 value > 0 in_construction = no }
                num_buildings = { type = building_factory_2 value > 0 in_construction = no }
                num_buildings = { type = building_factory_3 value > 0 in_construction = no }
                num_buildings = { type = building_roci_affluence_center_mod value > 0 in_construction = no }
        }
}

## doge_can_build_mech_building: Checks if the planet has a mech building already created.
# Context: Planet
doge_can_build_mech_building = {
        NOR = {
                num_buildings = { type = building_aerofighter_base value > 0 in_construction = no } # Aero Base
                num_buildings = { type = building_lightmechbay value > 0 in_construction = no } # Light Mechbay
                num_buildings = { type = building_mediummechbay value > 0 in_construction = no } # Medium Mechbay
                num_buildings = { type = building_heavymechbay value > 0 in_construction = no } # Heavy Mechbay
                num_buildings = { type = building_assaultmechbay value > 0 in_construction = no } # Assault Mechbay
        }
}

## doge_can_build_bunker: Checks if the empire already has an upgraded bunker building.
# Context: Planet
doge_can_build_bunker = {
        exists = owner
        owner = { # Scope out to owner so it checks if they have one built on any planet, not just the one it's checking from.
                NOR = {
                        num_buildings = { type = building_factory_1 value > 0 in_construction = no } # Zitadom
                        num_buildings = { type = building_giga_fortress value > 0 in_construction = no } # Delta Giga Fortress
                }
        }
}

## doge_can_build_government_foundation: Checks if the planet already has a government foundation.
# Context: Planet
doge_can_build_government_foundation = {
        NOR = {
                num_buildings = { type = building_autochthon_monument value > 0 in_construction = no } # Autochthon Monument
                num_buildings = { type = building_galactic_memorial_1 value > 0 in_construction = no } # Sanctuary of Repose
                num_buildings = { type = building_corporate_monument value > 0 in_construction = no } # Corporate Culture Site
                num_buildings = { type = building_sensorium_1 value > 0 in_construction = no } # Sensorium Site
                num_buildings = { type = building_simulation_1 value > 0 in_construction = no } # Simulation Site
        }
}

## doge_can_build_embassy: Checks if the empire already has an embassy.
# Context: Planet
doge_can_build_embassy = {
        exists = owner
        owner = { # Scope out to owner so it checks if they have one built on any planet, not just the one it's checking from.
                NOR = {
                        num_buildings = { type = building_embassy value > 0 in_construction = no } # Embassy
                        num_buildings = { type = building_grand_embassy value > 0 in_construction = no } # Grand Embassy
                        num_buildings = { type = building_dm_embassy value > 0 in_construction = no } # Dark Embassy
                        num_buildings = { type = building_ae_embassy value > 0 in_construction = no } # Dark Embassy
                }
        }
}